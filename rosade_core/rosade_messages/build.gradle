plugins {
    id "java"
    id "nebula.clojure" version "11.0.1"
}

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url "https://plugins.gradle.org/m2/"
    }
    flatDir {
        dirs '../lib'
    }
}

dependencies {
    implementation 'rosjava_core:rosjava:0.0.0'
    implementation 'rosjava_core:rosjava_bootstrap:0.0.0'
    implementation 'rosjava_core:rosjava_messages:0.0.0'
    implementation 'org.jboss.netty:netty:3.2.0.Final'
    implementation project(':rosade_core:rosade_bootstrap')
//    implementation fileTree(dir: '../lib', include: '*.jar')
}

tasks.register('generateSources', JavaExec) {
    group 'ROSADE'
    description "Generate the messages for ROS/ADE communication."
    def outputDir = "src/main/java/edu/tufts/hrilab/rosade/msg"
    outputs.dir file(outputDir)

    args outputDir
    classpath = configurations.runtimeClasspath
    mainClass = 'edu.tufts.hrilab.rosade.GenerateRosAdeInterfaces'
}
println generateSources.outputs.files
// Ensure the message sources are built
compileJava.source generateSources.outputs.files

// We need to also remove the source dir since it's auto-generated
clean {
    println 'Removing auto-generated source files.'
    delete 'src'
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = 'edu.tufts.hrilab'
            artifactId = 'rosade_messages'
            version = "0.0.0"
            from components.java
        }
    }
    repositories {
        mavenLocal()
    }
}
